name: CI

on:
    push:
        branches: [master, dev]
    pull_request_target:
        branches: [master, dev]

jobs:
    test:
        name: Test on Python ${{ matrix.python-version }} (beta=${{ matrix.beta }})
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10", "3.11", "3.12", "3.13"]
                beta: [false, true]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.22"

            - name: Build Go parsers
              run: pwsh -File ./build_goparser.ps1
              shell: bash

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install .[dev]

            - name: CLI smoke test
              run: |
                  agent-docstrings --version
                  if [ "${{ matrix.beta }}" = "true" ]; then
                    agent-docstrings --beta --version
                  fi

            - name: Run tests with coverage
              run: |
                  pytest --cov=agent_docstrings --cov-report=xml --cov-report=term-missing

            - name: Upload coverage artifact
              uses: actions/upload-artifact@v4
              with:
                  name: coverage-${{ matrix.python-version }}-${{ matrix.beta }}
                  path: coverage.xml

    report:
        name: Report Coverage
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Download all coverage artifacts
              uses: actions/download-artifact@v4
              with:
                  path: coverage-artifacts
                  pattern: coverage-*
                  merge-multiple: true

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  directory: ./coverage-artifacts/
                  fail_ci_if_error: false

    check-version:
        name: Check for accidental version bump
        if: github.base_ref == 'dev'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Verify that version was not bumped
              run: |
                  if ! git diff --quiet origin/dev HEAD -- pyproject.toml; then
                      echo "::error::Version in pyproject.toml was changed in a PR to dev."
                      echo "Version bumping should only happen in a release PR to master."
                      exit 1
                  fi
                  echo "Version check passed for pyproject.toml"
